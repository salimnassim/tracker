services:
  prometheus:
    image: "prom/prometheus"
    container_name: prometheus-tracker
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana-tracker
    restart: unless-stopped
    ports:
      - '3000:3000'
  postgres:
    image: postgres:latest
    container_name: postgres-tracker
    restart: always
    environment:
      POSTGRES_USER: tracker
      POSTGRES_PASSWORD: tracker
      POSTGRES_DB: tracker
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U tracker
  migrate:
    image: migrate/migrate:latest
    container_name: migrate-tracker
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgresql://tracker:tracker@postgres:5432/tracker?sslmode=disable",
        "up"
      ]
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
  backend:
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: on-failure
    image: tracker:latest
    container_name: backend-tracker
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ADDRESS: 0.0.0.0:9999
      ANNOUNCE_URL: http://localhost:9999/announce
      DSN: "postgresql://tracker:tracker@postgres:5432/tracker?sslmode=disable"
      TEMPLATE_PATH: "/app/templates/"
      STATIC_PATH: "/app/static/"
    ports:
      - "9999:9999"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://$$ADDRESS/health" ]
      interval: 30s
      timeout: 3s
      retries: 5
